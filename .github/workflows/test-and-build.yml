name: Test and build Docker image

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Test Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache-hash: ${{ hashFiles('**/deno.lock') }}

      # - name: "Run Lint"
      #   run: deno task lint

      # - name: "Run Format"
      #   run: deno task format

      - name: Run server tests
        run: deno task test:server

  build:
    needs: test
    name: Build Server (${{ matrix.tag }})
    runs-on: ubuntu-latest
    concurrency:
      group: docker-build-${{ github.ref }}-${{ matrix.tag }}
      cancel-in-progress: false
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            arch: x86_64-unknown-linux-gnu
            tag: amd64
          - platform: linux/arm64
            arch: aarch64-unknown-linux-gnu
            tag: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}
          cache-image: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.platform }}
          install: true
          cache-binary: true
          cleanup: true

      - name: Build image only (PR)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          build-args: |
            ARCH=${{ matrix.arch }}
          push: false
          load: true
          tags: |
            suit-tracker:pr-${{ github.event.pull_request.number }}-${{ matrix.tag }}
            suit-tracker:${{ github.sha }}-pr-${{ matrix.tag }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.ref.name=refs/pull/${{ github.event.pull_request.number }}/head
